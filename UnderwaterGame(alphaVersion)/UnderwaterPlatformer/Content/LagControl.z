class LagControl : ZilchComponent
{
    var Active:Boolean = false;

    var ActiveRange:Real = 10;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.GameSession, Events.EnemyActiveUpdate, this.OnEnemyActiveUpdate);
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        this.Activate();
    }
    
    function OnEnemyActiveUpdate(event : ZilchEvent)
    {
        var active = PlayerMovement.Valid && Math.DistanceSq(PlayerMovement.Position,
        this.Owner.Transform.WorldTranslation) <= this.ActiveRange * this.ActiveRange;
        
        if (active == this.Active)
        return;
        
        if (active)
        this.Activate();
        else
        this.Deactivate();
    }
    
    function Activate()
    {
        this.Active = true;
        
        if(this.Owner.EnemyController == null)
        Zero.Connect(this.Space, Events.LogicUpdate, this.Owner.BallistaSnail.OnLogicUpdate);
        else
        Zero.Connect(this.Space, Events.LogicUpdate, this.Owner.EnemyController.OnLogicUpdate);
    }
    function Deactivate()
    {
        this.Active = false;
        if(this.Owner.EnemyController == null)
        Zero.Disconnect(this.Space, Events.LogicUpdate, this.Owner.BallistaSnail);
        else
        Zero.Disconnect(this.Space, Events.LogicUpdate, this.Owner.EnemyController);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
    }
}
