//Jacob Burke

//The player Controller manages the player: 
//Taking input from the keyboard and changing sprite art etc

class PlayerController : ZilchComponent
{
    
    [Property]
    var Left:Keys = Keys.Left;

    [Property]
    var Right:Keys = Keys.Right;
    
    [Property]
    var  IdleAnimation:SpriteSource;
    
    [Property]
    
    var WalkingAnimation:SpriteSource;
    
    [Property]
    var JumpAnimation:SpriteSource;
    
    [Property]
    var ThrowAnimation:SpriteSource;
    var ThrowTime:Real = 0.2;
    
    
    [Property]
    var JumpSound:SoundCue;
    
    
    
    [Property]
    
    var SpriteColor:Real4 = Real4(1,1,1,1);
    
    [Property]
    var RegularColor:Real4 = Real4(1,1,1,1);
    
    
    [Property]
    var Lose:Integer = 1;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
        Zero.Connect(this.Owner, Events.SweptCollision, this.OnSweptCollision);
        
        Zero.Connect(this.Space, Events.LeftMouseDown, this.OnLeftMouseDown);
        
    }


    function OnLeftMouseDown(event : ViewportMouseEvent)
    {
        
        this.Owner.Sprite.SpriteSource = this.ThrowAnimation;
        
    }


    function OnSweptCollision(event : SweptControllerEvent)
    {
        
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        
        
        
        
    
        
        
        if(this.Owner.Sprite.SpriteSource == this.ThrowAnimation)
        {
            this.ThrowTime -= event.Dt;
            
            if(this.ThrowTime >= 0)
            {
                return;
            }
            else
            this.ThrowTime += 0.2;
        
        }
        
        /*if(!this.Owner.SweptController.Grounded)
        {
            this.Owner.Sprite.SpriteSource = this.JumpAnimation;
        }
        else if(movement == Real3(0,0,0))
        {
            this.Owner.Sprite.SpriteSource = this.IdleAnimation;
        }
        else if(this.Owner.Sprite.SpriteSource != this.WalkingAnimation)
        {
            this.Owner.Sprite.SpriteSource = this.WalkingAnimation;
        }
        */
        
        
        

    }
}
