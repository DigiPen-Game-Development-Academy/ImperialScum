//Jacob Burke

//Enemy Controller

class EnemyController : ZilchComponent
{
    
    var Active:Boolean = false;
    
    var LosingPlayer:Boolean = false;
    
    var TimerTillNotFollow:Real = 3;
    
    [Property]
    var Speed:Integer;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
       
    }

    function OnCollisionStarted(event : CollisionEvent)
    {
        if(event.OtherObject.PlayerController != null)
        {
        this.Active = true;
        }
    }
    
    function OnCollisionEnded(event : CollisionEvent)
    {
        if(event.OtherObject.PlayerController != null)
        {
        this.Active = false;
        }
        
    }
    
    var Following : Real = 0;
    
    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.Active == true) this.Following = 2;
        else this.Following -= event.Dt;
        
        if (this.Following <= 0) return;
        
        var target = this.Space.FindObjectByName("Player");
        if(target == null) return;
        
        if(target.Transform.WorldTranslation.X < this.Owner.Transform.WorldTranslation.X)
        {
            var velocity = this.Owner.RigidBody.Velocity;
            velocity.X = -this.Speed;
            this.Owner.RigidBody.Velocity= velocity;
        }
        else
        {
            var velocity = this.Owner.RigidBody.Velocity;
            velocity.X = this.Speed;
            this.Owner.RigidBody.Velocity= velocity;
        }
    
    
    }

}
